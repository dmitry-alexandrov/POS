plugins {
    id "io.qameta.allure" version "2.8.1"
    id 'java'
}


allure {
    version = '2.13.0'
    autoconfigure = true
    aspectjweaver = true
}


version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

task testPolls(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-polls.xml'
    }

    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'org.testng', name: 'testng', version: '6.10'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.7.1'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.0'
}





/*apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'base'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    agent
}

dependencies {
    implementation 'org.testng:testng:7.0.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.0.0-alpha-3'
    // compile 'com.applitools:eyes-selenium-java3:3.156.5'
    implementation 'com.thoughtworks.xstream:xstream:1.4.11.1'
    implementation 'io.rest-assured:rest-assured:4.2.0'
    implementation 'org.json:json:20190722'
    implementation 'ru.stqa.selenium:webdriver-factory:4.4'
 // implementation 'com.konghq:unirest-java-parent:3.6.00'
            agent 'org.aspectj:aspectjweaver:1.8.0'
    implementation 'ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4'
    implementation 'ru.yandex.qatools.allure:allure-core:1.4.0.RC4'
    implementation 'io.qameta.allure:allure-gradle:2.8.1'
}

task testPolls(type: Test) {

	useTestNG {
        suites 'src/test/resources/testng-polls.xml'
    }

    if(project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if(project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if(project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

testPolls.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}
*/
